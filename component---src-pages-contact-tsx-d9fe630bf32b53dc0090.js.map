{"version":3,"sources":["webpack:///./src/pages/contact.tsx"],"names":["PageTemplate","css","colors","darkmode","Contact","props","cardImage","config","siteUrl","data","header","childImageSharp","fixed","src","width","height","title","name","content","property","facebook","twitter","split","toString","className","SiteHeader","SiteArchiveHeader","outer","SiteNavMain","inner","isHome","isPost","post","id","SiteMain","PostFull","NoImage","href","pageQuery"],"mappings":"wTAwBA,MAAMA,EAAeC,YAAH,wFAUEC,IAAOC,SAVT,MA2EHC,UA5DWC,IACxB,IAAIC,EAAa,GAAEC,IAAOC,UAAUH,EAAMI,KAAKC,OAAOC,gBAAgBC,MAAMC,OACxE,MAAEC,EAAF,OAASC,GAAWV,EAAMI,KAAKC,OAAOC,gBAAgBC,MAE1D,OACA,YAAC,IAAD,KACE,YAAC,IAAD,KACE,yBAAS,aAAYL,IAAOS,OAC1B,oBAAMC,KAAK,cAAcC,QAAS,YAClC,oBAAMC,SAAS,eAAeD,QAASX,IAAOS,QAC9C,oBAAMG,SAAS,UAAUD,QAAQ,YACjC,oBAAMC,SAAS,WAAWD,QAAU,aAAYX,IAAOS,QACvD,oBAAMG,SAAS,iBAAiBD,QAAS,YACzC,oBAAMC,SAAS,SAASD,QAASX,IAAOC,QAAU,YACjDD,IAAOa,UAAY,oBAAMD,SAAS,oBAAoBD,QAASX,IAAOa,WACvE,oBAAMH,KAAK,eAAeC,QAAQ,wBAClC,oBAAMD,KAAK,gBAAgBC,QAAU,aAAYX,IAAOS,QACxD,oBAAMC,KAAK,cAAcC,QAASX,IAAOC,QAAU,YACnD,oBAAMW,SAAS,sBAAsBD,QAAS,YAC7CX,IAAOc,SACN,oBACEJ,KAAK,eACLC,QAAU,IAAGX,IAAOc,QAAQC,MAAM,wBAAwB,KAG9D,oBAAML,KAAK,WAAWC,QAASZ,IAC/B,oBAAMW,KAAK,gBAAgBC,QAASZ,IACpC,oBAAMa,SAAS,iBAAiBD,QAASJ,EAAMS,aAC/C,oBAAMJ,SAAS,kBAAkBD,QAASH,EAAOQ,cAErD,YAAC,IAAD,CAAStB,IAAKD,GACZ,sBAAQwB,UAAU,+BAA+BvB,IAAG,YAAE,CAACwB,IAAYC,OACjE,mBAAKzB,IAAG,YAAE,CAAC0B,IAAOC,OAChB,mBAAK3B,IAAK4B,KACR,YAAC,IAAD,CAASC,QAAQ,EAAOC,QAAQ,EAAMC,KAAM,CAAChB,MAAO,gBAI1D,oBAAMiB,GAAG,YAAYT,UAAU,YAAYvB,IAAG,YAAE,CAACiC,IAAUP,OACzD,mBAAK1B,IAAK4B,KACR,uBAASL,UAAU,YAAYvB,IAAG,YAAE,CAACkC,WAAUC,aAC7C,YAAC,iBAAD,CAAgBZ,UAAU,oBACxB,YAAC,gBAAD,CAAeA,UAAU,mBAAzB,YAGF,YAAC,IAAD,CAAiBA,UAAU,qBACzB,mBAAKA,UAAU,gBACb,oGAC4D,iBAAGa,KAAK,oCAAR,mCAOtE,YAAC,IAAD,SAOC,MAAMC,EAAY","file":"component---src-pages-contact-tsx-d9fe630bf32b53dc0090.js","sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { css } from '@emotion/core';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport { PostFullContent } from '../components/PostContent';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  SiteArchiveHeader,\n  SiteHeader,\n  SiteMain,\n  SiteNavMain,\n} from '../styles/shared';\nimport { NoImage, PostFull, PostFullHeader, PostFullTitle } from '../templates/post';\nimport { colors } from '../styles/colors';\n\nimport config from '../website-config';\nimport { graphql, Link } from 'gatsby';\n\nconst PageTemplate = css`\n  .site-main {\n    margin-top: 64px;\n    padding-bottom: 4vw;\n    background: #fff;\n  }\n\n  //@media (prefers-color-scheme: dark) {\n    .site-main {\n      /* background: var(--darkmode); */\n      background: ${colors.darkmode};\n    }\n  //}\n`;\n\nconst Contact: React.FC = props => {\n  let cardImage = `${config.siteUrl}${props.data.header.childImageSharp.fixed.src}`\n  let { width, height } = props.data.header.childImageSharp.fixed;\n\n  return (\n  <IndexLayout>\n    <Helmet>\n      <title>{`Contact - ${config.title}`}</title>\n        <meta name=\"description\" content={'Contact'} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={`Contact - ${config.title}`} />\n        <meta property=\"og:description\" content={'Contact'} />\n        <meta property=\"og:url\" content={config.siteUrl + 'contact'} />\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={`Contact - ${config.title}`} />\n        <meta name=\"twitter:url\" content={config.siteUrl + 'contact'} />\n        <meta property=\"twitter:description\" content={'Contact'} />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        <meta name=\"og:image\" content={cardImage} />\n        <meta name=\"twitter:image\" content={cardImage} />\n        <meta property=\"og:image:width\" content={width.toString()} />\n        <meta property=\"og:image:height\" content={height.toString()} />\n    </Helmet>\n    <Wrapper css={PageTemplate}>\n      <header className=\"site-archive-header no-image\" css={[SiteHeader, SiteArchiveHeader]}>\n        <div css={[outer, SiteNavMain]}>\n          <div css={inner}>\n            <SiteNav isHome={false} isPost={true} post={{title: 'Contact'}} />\n          </div>\n        </div>\n      </header>\n      <main id=\"site-main\" className=\"site-main\" css={[SiteMain, outer]}>\n        <div css={inner}>\n          <article className=\"post page\" css={[PostFull, NoImage]}>\n            <PostFullHeader className=\"post-full-header\">\n              <PostFullTitle className=\"post-full-title\">Contact</PostFullTitle>\n            </PostFullHeader>\n\n            <PostFullContent className=\"post-full-content\">\n              <div className=\"post-content\">\n                <p>\nWeâ€™d love to hear from you. Send us your feedback, comments or questions to <a href=\"mailto:support@theemptyrobot.com\">support@theemptyrobot.com</a>\n                </p>\n              </div>\n            </PostFullContent>\n          </article>\n        </div>\n      </main>\n      <Footer />\n    </Wrapper>\n  </IndexLayout>\n); };\n\nexport default Contact;\n\nexport const pageQuery = graphql`\n  query {\n    header: file(relativePath: { eq: \"img/emptyrobot-background.png\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fixed(width: 1200, quality: 100) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}