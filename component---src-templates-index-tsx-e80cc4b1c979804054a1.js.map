{"version":3,"sources":["webpack:///./src/components/Pagination.tsx","webpack:///./src/components/BookCard.tsx","webpack:///./src/templates/index.tsx"],"names":["navCss","css","darken","colors","darkgrey","Pagination","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","to","rel","String","fromCharCode","Array","from","length","_","i","key","className","BookCard","post","large","PostCardStyles","PostCardLarge","PostCardContent","PostCardContentLink","slug","author","PostCardHeader","PostCardTitle","title","style","textAlign","color","margin","marginBottom","marginTop","PostCardAuthor","lighten","darkmode","black","blue","midgrey","lightgrey","SectionTitle","BookAdjust","pageQuery","HomePosts","IndexPage","props","width","height","data","header","childImageSharp","fixed","Helmet","lang","config","name","content","description","property","siteUrl","src","facebook","googleSiteVerification","twitter","split","Wrapper","outer","SiteNavMain","inner","SiteNav","isPost","id","SiteMain","logo","maxWidth","marginLeft","marginRight","loading","fluid","alt","fadeIn","display","padding","opacity","borderRadius","fontFamily","fontSize","Posts","PostFeed","allMarkdownRemark","edges","map","index","node","frontmatter","draft","PostCard","fields","paddingTop","book","children","pageContext","Footer"],"mappings":"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","file":"component---src-templates-index-tsx-e80cc4b1c979804054a1.js","sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport { darken } from 'polished';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../styles/colors';\n\nexport interface PaginationProps {\n  currentPage: number;\n  numPages: number;\n}\n\nconst Pagination: React.FunctionComponent<PaginationProps> = ({ currentPage, numPages }) => {\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage = currentPage - 1 === 1 ? '/' : (currentPage - 1).toString();\n  const nextPage = (currentPage + 1).toString();\n\n  return (\n    <nav css={navCss}>\n      <div>\n        {!isFirst && (\n          <Link to={prevPage} rel=\"prev\">\n            {/* << symbol */}\n            {String.fromCharCode(171)}\n          </Link>\n        )}\n\n        {Array.from({ length: numPages }, (_, i) => (\n          <Link key={`pagination-number${i + 1}`} className={i + 1 === currentPage ? 'active' : ''} to={`/${i === 0 ? '' : i + 1}`}>\n            {i + 1}\n          </Link>\n        ))}\n\n        {!isLast && (\n          <Link to={nextPage} rel=\"next\">\n            {/* >> symbol */}\n            {String.fromCharCode(187)}\n          </Link>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nconst navCss = css`\n  text-align: center;\n  div {\n    display: inline-block;\n  }\n\n  a {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell;\n    background: #fff;\n    color: black;\n    float: left;\n    padding: 8px 16px;\n    text-decoration: none;\n    transition: background-color .3s;\n    border: 1px solid #ddd;\n    margin: 0 4px;\n    box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n    border-radius: 6px;\n    margin-bottom: 5px;\n    min-width: 50px;\n\n    &.active {\n      -webkit-box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\n      -moz-box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\n      box-shadow:inset 3px 0px 0px 0px ${darken(0.05, colors.darkgrey)};\n    }\n\n    &:hover:not(.active) {\n      background-color: #ddd;\n    }\n\n    &:hover {\n      text-decoration: none;\n    }\n  }\n`;\n\nexport default Pagination;\n","import { format } from 'date-fns';\nimport { Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport _ from 'lodash';\nimport { lighten } from 'polished';\nimport React from 'react';\n\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\n\nimport { colors } from '../styles/colors';\nimport { PageContext } from '../templates/post';\nimport { AuthorList } from './AuthorList';\n\nexport const BookCard = ({ post, large = false }) => {\n\n  return (\n    <article\n      className={`post-card no-image'`}\n      css={[PostCardStyles, large && PostCardLarge]}\n    >\n      <PostCardContent className=\"post-card-content\">\n        <Link className=\"post-card-content-link\" css={PostCardContentLink} to={post.slug}>\n    <div>\n\n        {\n          post.author ? (<div>\n          <PostCardHeader className=\"post-card-header\"  >\n            <PostCardTitle className=\"post-card-title\">{post.title}</PostCardTitle>\n          </PostCardHeader>\n\n            <div style={{textAlign:\"center\", color: \"#90a2aa\", margin: \"-10px\"}}>\n            by\n            </div>\n\n                  <PostCardHeader className=\"post-card-header\" style={{marginBottom: '15px', marginTop: '10px'}}>\n                    <PostCardAuthor className=\"post-card-title\">{post.author}</PostCardAuthor>\n                  </PostCardHeader>\n          </div>\n) : (<>\n          <PostCardHeader className=\"post-card-header\" style={{marginBottom: '15px'}}>\n            <PostCardTitle className=\"post-card-title\">{post.title}</PostCardTitle>\n          </PostCardHeader>\n\n  </>)\n        }\n\n    </div>\n        </Link>\n      </PostCardContent>\n    </article>\n  );\n};\n\nconst PostCardStyles = css`\n\n  position: relative;\n  flex: 1 1 301px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 20px 40px;\n  //padding: 0 20px 40px;\n  /* border-bottom: 1px solid color(var(--lightgrey) l(+12%)); */\n  //border-bottom: 1px solid ${lighten('0.12', colors.lightgrey)};\n  background-size: cover;\n\n  @media (max-width: 500px) {\n    padding: 0;\n    margin-bottom: 20px;\n  }\n\n  //@media (prefers-color-scheme: dark) {\n    /* border-bottom-color: color(var(--darkmode) l(+8%)); */\n    border-bottom-color: ${lighten('0.08', colors.darkmode)};\n  //}\n  //\n  //\n`;\n\n\nconst PostCardImageLink = css`\n  position: relative;\n  display: block;\n  overflow: hidden;\n  border-radius: 5px 5px 0 0;\n`;\n\nconst PostCardImage = styled.div`\n  width: auto;\n  height: 200px;\n  background: ${colors.black} no-repeat center center;\n  background-size: cover;\n\n  .gatsby-image-wrapper {\n    picture {\n      img {\n       object-fit: contain !important;\n       filter: brightness(75%) !important;\n      }\n    }\n  }\n`;\n\nconst PostCardContent = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  //background: #060606;\n  display: flex;\n  min-height: 50px;\n    justify-content: center;\n    align-items: center;\n\n\n\n    //box-shadow: 0 0 20px rgba(62, 176, 239, 0.1);\n    //backdrop-filter: blur(2px);\n    //border: 1px solid rgba(62, 176, 239, 0.1);\n    border-radius: 10px;\n\n  //box-shadow:\n    //inset 0 0 25px  rgba(255, 255, 255, 0.01),      /* inner white */\n    //inset 20px 0 40px rgba(255, 255, 255, 0.01),   /* inner left magenta short */\n    //inset -20px 0 40px  rgba(255, 255, 255, 0.01),  /* inner right cyan short */\n    //inset 20px 0 150px rgba(255, 255, 255, 0.01),  /* inner left magenta broad */\n    //inset -20px 0 150px rgba(255, 255, 255, 0.01); /* inner right cyan broad */\n\n  //background: rgba(25, 25, 25, 1);\n\n    background: rgba(0, 0, 0, 0.9);\n    //box-shadow: \n      //inset 0 0 15px rgba(100, 100, 100, .5);\n      //border: 1px solid rgba(255, 255, 255, 0.25);;\n\n  //padding: 0 20px;\n`;\n\nconst PostCardContentLink = css`\n  position: relative;\n  display: block;\n  /* color: var(--darkgrey); */\n  color: ${colors.darkgrey};\n  width: 100%;\n  height: 100%;\n\n  :hover {\n    text-decoration: none;\n  }\n`;\n\nconst PostCardPrimaryTag = styled.div`\n  margin: 0 0 0.2em;\n  /* color: var(--blue); */\n  color: ${colors.blue};\n  font-size: 1.2rem;\n  font-weight: 500;\n  letter-spacing: 0.2px;\n  text-transform: uppercase;\n`;\n\nconst PostCardTitle = styled.h2`\n  text-align: center;\n  margin: 0 0 0.4em;\n  line-height: 1.15em;\n  transition: color 0.2s ease-in-out;\n\n  //@media (prefers-color-scheme: dark) {\n    color: rgba(255, 255, 255, 0.85);\n  //}\n`;\n\nconst PostCardAuthor = styled.h3`\n  text-align: center;\n  margin: 0 0 0.4em;\n  line-height: 1.15em;\n  transition: color 0.2s ease-in-out;\n\n  //@media (prefers-color-scheme: dark) {\n    color: rgba(255, 255, 255, 0.85);\n  //}\n  color: #90a2aa\n`;\n\nconst PostCardExcerpt = styled.section`\n  font-family: Georgia, serif;\n\n  //@media (prefers-color-scheme: dark) {\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)} !important;\n  //}\n`;\n\nconst PostCardMeta = styled.footer`\n  display: flex;\n  align-items: flex-start;\n  padding: 0;\n`;\n\nconst PostCardBylineContent = styled.div`\n  flex: 1 1 50%;\n  display: flex;\n  flex-direction: column;\n  margin: 4px 0 0 10px;\n  /* color: color(var(--midgrey) l(+10%)); */\n  color: ${lighten('0.1', colors.midgrey)};\n  font-size: 1.2rem;\n  line-height: 1.4em;\n  font-weight: 400;\n  letter-spacing: 0.2px;\n  text-transform: uppercase;\n\n  span {\n    margin: 0;\n  }\n\n  a {\n    /* color: color(var(--darkgrey) l(+20%)); */\n    color: ${lighten('0.2', colors.darkgrey)};\n    font-weight: 600;\n  }\n\n  //@media (prefers-color-scheme: dark) {\n    a {\n      color: rgba(255, 255, 255, 0.75);\n    }\n  //}\n`;\n\nconst PostCardHeader = styled.header`\n  margin: 15px 0 0;\n`;\n\nexport const StaticAvatar = css`\n  display: block;\n  overflow: hidden;\n  margin: 0 0 0 -6px;\n  width: 34px;\n  height: 34px;\n  border: #fff 2px solid;\n  border-radius: 100%;\n\n  //@media (prefers-color-scheme: dark) {\n    /* border-color: color(var(--darkgrey) l(+2%)); */\n    border-color: ${lighten('0.02', colors.darkgrey)};\n  //}\n`;\n\nexport const AuthorProfileImage = css`\n  display: block;\n  width: 100%;\n  height: 100%;\n  /* background: color(var(--lightgrey) l(+10%)); */\n  background: ${lighten('0.1', colors.lightgrey)};\n  border-radius: 100%;\n  object-fit: cover;\n\n  //@media (prefers-color-scheme: dark) {\n    background: ${colors.darkmode};\n  //}\n`;\n","import { graphql } from 'gatsby';\nimport { FixedObject } from 'gatsby-image';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { css } from '@emotion/core';\nimport Img from \"gatsby-image\"\n\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport Pagination from '../components/Pagination';\nimport { PostCard } from '../components/PostCard';\nimport { TopicCard } from '../components/TopicCard';\nimport { BookCard } from '../components/BookCard';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  Posts,\n  SiteDescription,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteMain,\n  SiteNavMain,\n  SiteTitle,\n  SiteHeaderStyles,\n  SiteQuote,\n} from '../styles/shared';\nimport config from '../website-config';\nimport { PageContext } from './post';\n\nimport { Stars } from '../components/Stars';\nimport { Canvas } from 'react-three-fiber'\n\nconst SectionTitle = css`\n  //font-family: 'Blanka';\n  text-align: center;\n  //text-shadow: 0 0 50px rgba(255,255,255,0.3), 2px 0 1px rgba(255,255,255,0.3), -2px 0 10px rgba(255,255,255,0.3), 2px 0 10px rgba(255,255,255,0.3), -2px 0 10px rgba(255,255,255,0.3);\n  margin: 2.5em 0 2.5em 0;\n  color: #fff;\n  font-size: 2.8rem;\n`\nconst BookAdjust = css`\n\n  @media (min-width: 500px) {\n   margin-bottom: -20px\n }\n`\n\nconst IndexPage = (props) => {\n  const { width, height } = props.data.header.childImageSharp.fixed;\n  const homepageTags = [ {\n    title: \"Free Will\",\n    slug: \"topics/free-will/\"\n  }, {\n    title: \"Buddhism\",\n    slug: \"topics/buddhism/\"\n  }, {\n    title: \"The Buddha\",\n    slug: \"topics/the-buddha/\"\n  }, {\n    title: \"Determinism\",\n    slug: \"topics/determinism/\"\n  }, {\n    title: \"Indeterminism\",\n    slug: \"topics/indeterminism/\"\n  }, {\n    title: \"Consciousness\",\n    slug: \"topics/consciousness/\"\n  }, {\n    title: \"All Topics\",\n    slug: \"topics/\"\n  }];\n\n\n  const homepageBooks = [ {\n    title: \"Meditations\",\n    author: \"Marcus Aurelius\",\n    slug: \"texts/meditations/\"\n  }, {\n    title: \"Determinism or Free-Will?\",\n    author: \"Chaptman Cohen\",\n    slug: \"texts/determinism-or-free-will/\"\n  },{\n    title: \"Relativity: The Special and General Theory\",\n    author: \"Albert Einstein\",\n    slug: \"texts/relativity-the-special-and-general-theory/\"\n  },\n  {\n      title: 'Dīgha Nikāya (\"The Collection of Long Discourses\")',\n      author: \"\",\n      slug: \"/texts/tipitaka/sutta-pitaka/digha-nikaya/\"\n    },\n    {\n      title: 'Majjhima Nikāya (\"The Collection of Middle-length Discourses\")',\n      author: \"\",\n      slug: \"/texts/tipitaka/sutta-pitaka/majjhima-nikaya/\"\n    },\n    {\n    title: \"The Dhammapada\",\n    author: \"\",\n    slug: \"texts/the-dhammapada/\"\n  },\n    {\n    title: \"Life of Buddha\",\n    author: \"Aśvaghoṣa\",\n    slug: \"texts/life-of-buddha/\"\n  },\n    {\n    title: \"On the Nature of Things\",\n    author: \"Titus Lucretius Carus\",\n    slug: \"texts/on-the-nature-of-things/\"\n  },\n    {\n    title: \"The Ethics\",\n    author: \"Benedict de Spinoza\",\n    slug: \"texts/on-the-nature-of-things/\"\n  },\n/*    {\n    title: \"Human, All Too Human\",\n    author: \"Friedrich Nietzsche\",\n    slug: \"texts/on-the-nature-of-things/\"\n  }, */\n    {\n    title: \"All Texts\",\n    slug: \"texts/\"\n  }];\n\n  return (\n    <IndexLayout css={HomePosts}>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>{config.title + \" - Exploring the nature of the mind, reality, and connected nature of the universe.\"}</title>\n        <meta name=\"description\" content={config.description} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={config.title + \" - Exploring the nature of the mind, reality, and connected nature of the universe.\"} />\n        <meta property=\"og:description\" content={config.description} />\n        <meta property=\"og:url\" content={config.siteUrl} />\n        <meta\n          property=\"og:image\"\n          content={`${config.siteUrl}${props.data.header.childImageSharp.fixed.src}`}\n        />\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        {config.googleSiteVerification && (\n          <meta name=\"google-site-verification\" content={config.googleSiteVerification} />\n        )}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={config.title + \" - Exploring the nature of the mind, reality, and connected nature of the universe.\"} />\n        <meta name=\"twitter:description\" content={config.description} />\n        <meta name=\"twitter:url\" content={config.siteUrl} />\n        <meta\n          name=\"twitter:image\"\n          content={`${config.siteUrl}${props.data.header.childImageSharp.fixed.src}`}\n        />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        <meta property=\"og:image:width\" content={width.toString()} />\n        <meta property=\"og:image:height\" content={height.toString()} />\n      </Helmet>\n      <Wrapper>\n        <header\n          css={[outer, SiteNavMain, ]}\n          className=\"site-header\"\n        >\n          <div css={inner}>\n            <SiteNav isPost post={ {title: config.title}} />\n          </div>\n        </header>\n\n    {/*\n        <Canvas \n          camera={{ fov: 240, position: [0, 0, -0] }}\n          style={{position:'fixed', width:'100%', height: '100%'}}>\n          <Stars></Stars>\n        </Canvas>\n    */}\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n\n            <SiteHeaderContent className=\"site-header-conent\">\n\n              <SiteTitle className=\"site-title\">\n                {props.data.logo ? (\n                  <Img\n                    style={{ \n                      maxWidth: 300,\n                        //filter: 'drop-shadow(0px 0px 10px rgba(255, 255, 255, 1))',\n                      marginLeft: 'auto',\n                        marginRight: 'auto'\n                    }}\n                    loading='eager'\n                    fluid={props.data.logo.childImageSharp.fluid}\n                    alt={config.title}\n                  fadeIn={false}\n                  />\n                ) : (\n                  config.title\n                )}\n                <br/>\n              </SiteTitle>\n\n\n                <div style={{\n                  display:'block',\n                    padding: '40px 0',\n                    opacity: 0.75,\n                    //borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n                    //marginBottom: '40px',\n                    //background: 'rgba(0, 0, 0, 01)',\n                      //border: '#3eb0ef 1px solid',\n                      padding: '40px',\n                      borderRadius: '10px',\n\n    fontFamily: 'Georgia, Serif',\n      fontSize: '1.8rem',\n  marginTop: '40px',\n      marginBottom: '40px'\n                }}>\n                  <p style={{\n                      fontFamily: 'Georgia, Serif',\n                    }} className=\"topic-description\">\n                    <q style={{\n                      fontSize: '2rem',\n                       color: 'rgba(255,255,255,0.85)',\n                      textAlign: 'center', display: 'block', opacity: 1\n                    }} >\n                      <i>From true emptiness, the wondrous being appears.</i>\n                     <br/> - Shunryu Suzuki\n                    </q>\n                  </p>\n                </div>\n\n                <SiteDescription style={{textAlign:'center'}} className=\"site-description\">\n\n\n                </SiteDescription>\n            </SiteHeaderContent>\n            <div css={[inner, Posts]}>\n              <div css={[PostFeed]} style={{padding:0, margin: 0}}>\n\n                {props.data.allMarkdownRemark.edges.map((post, index) => {\n                  // filter out drafts in production\n                  return (\n                    (post.node.frontmatter.draft !== true ||\n                      process.env.NODE_ENV !== 'production') && (\n                      <PostCard key={post.node.fields.slug} post={post.node} large={index === 0} />\n                    )\n                  );\n                })}\n              </div>\n\n\n\n\n\n    <h2 css={[SectionTitle]} >\n    TEXTS\n    </h2>\n\n              <div css={[PostFeed, BookAdjust]} style={{padding:0, paddingTop: 20,}}>\n\n                {homepageBooks.map((book) => {\n                  // filter out drafts in production\n                  return (\n\n                    <BookCard key={book.slug} post={book} />\n                    )\n                })}\n              </div>\n\n\n    {/*\n    <h2 css={[SectionTitle]} >\n    TOPICS\n    </h2>\n\n              <div css={[PostFeed]} style={{padding:0, paddingTop: 20}}>\n\n                {homepageTags.map((topic) => {\n                  // filter out drafts in production\n                  return (\n\n                    <TopicCard key={topic.slug} post={topic} />\n                    )\n                })}\n              </div>\n\n    */\n    }\n\n\n            </div>\n        </main>\n        {props.children}\n        {props.pageContext.numPages > 1 && (\n          <Pagination\n            currentPage={props.pageContext.currentPage}\n            numPages={props.pageContext.numPages}\n          />\n        )}\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\n\n// We follow the path carved over thousands of years by the greats that came before us. What does it mean to say that all things are empty? What does an empty universe imply about the nature of awareness, free will, the self, space, and time? Are each of us connected in a way only we're only beginning to understand? The journey of The Empty Robot is one which aims to better understand what it means to be. \n// Exploring the nature of the mind, reality, and connected nature of the universe.\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    logo: file(relativePath: { eq: \"img/theemptyrobot.png\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fluid (maxWidth: 300, maxHeight: 300) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    header: file(relativePath: { eq: \"img/emptyrobot-background.png\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fixed(width: 1200, quality: 100) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { ne: true }, type: {eq: \"post\"} } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          timeToRead\n          frontmatter {\n            title\n            date\n            tags\n            draft\n            excerpt\n            picture {\n              childImageSharp {\n                fixed(height: 400) {\n                  ...GatsbyImageSharpFixed_noBase64\n                }\n              }\n            }\n            author\n          }\n          excerpt\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\n\nconst HomePosts = css`\n  @media (min-width: 795px) {\n    .post-card-large {\n      flex: 1 1 100%;\n      flex-direction: row;\n      padding-bottom: 40px;\n      min-height: 280px;\n      border-top: 0;\n    }\n\n    .post-card-large .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-large:not(.no-image) .post-card-header {\n      margin-top: 0;\n    }\n\n    .post-card-large .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n      margin-bottom: 0;\n      min-height: 380px;\n    }\n\n    .post-card-large .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card-large .post-card-content {\n      flex: 0 1 361px;\n      justify-content: center;\n    }\n\n    .post-card-large .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n    }\n\n    .post-card-large .post-card-content-link {\n      /*padding: 0 0 0 40px;*/\n    }\n\n    .post-card-large .post-card-meta {\n      /*padding: 0 0 0 40px;*/\n    }\n\n    .post-card-large .post-card-excerpt p {\n      margin-bottom: 1.5em;\n      font-size: 1.8rem;\n      line-height: 1.5em;\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"sourceRoot":""}